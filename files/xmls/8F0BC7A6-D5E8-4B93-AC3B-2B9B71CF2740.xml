<?xml version="1.0" encoding="utf-8"?>
<Invoice xmlns="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2" xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2" xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2" xmlns:ccts="urn:un:unece:uncefact:documentation:2" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:ext="urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2" xmlns:qdt="urn:oasis:names:specification:ubl:schema:xsd:QualifiedDatatypes-2" xmlns:ubltr="urn:oasis:names:specification:ubl:schema:xsd:TurkishCustomizationExtensionComponents" xmlns:udt="urn:un:unece:uncefact:data:specification:UnqualifiedDataTypesSchemaModule:2" xmlns:xades="http://uri.etsi.org/01903/v1.3.2#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <cbc:UBLVersionID>2.1</cbc:UBLVersionID>
  <cbc:CustomizationID>TR1.2</cbc:CustomizationID>
  <cbc:ProfileID>IHRACAT</cbc:ProfileID>
  <cbc:ID>CMS2022000000007</cbc:ID>
  <cbc:CopyIndicator>false</cbc:CopyIndicator>
  <cbc:UUID>8F0BC7A6-D5E8-4B93-AC3B-2B9B71CF2740</cbc:UUID>
  <cbc:IssueDate>2022-04-04</cbc:IssueDate>
  <cbc:IssueTime>23:58:47.437Z</cbc:IssueTime>
  <cbc:InvoiceTypeCode>ISTISNA</cbc:InvoiceTypeCode>
  <cbc:DocumentCurrencyCode>USD</cbc:DocumentCurrencyCode>
  <cbc:LineCountNumeric>1</cbc:LineCountNumeric>
  <cac:AdditionalDocumentReference>
    <cbc:ID>8F0BC7A6-D5E8-4B93-AC3B-2B9B71CF2740</cbc:ID>
    <cbc:IssueDate>2022-04-04</cbc:IssueDate>
    <cac:Attachment>
      <cbc:EmbeddedDocumentBinaryObject characterSetCode="UTF-8" encodingCode="Base64" mimeCode="application/xml" filename="8F0BC7A6-D5E8-4B93-AC3B-2B9B71CF2740.xslt"></cbc:EmbeddedDocumentBinaryObject>
    </cac:Attachment>
  </cac:AdditionalDocumentReference>
  <cac:AccountingSupplierParty>
    <cac:Party>
      <cac:PartyIdentification>
        <cbc:ID schemeID="VKN">1234567801</cbc:ID>
      </cac:PartyIdentification>
      <cac:PartyName>
        <cbc:Name>MİMSOFT ARGE ARŞİVLEME TEKNOLOJİLERİ AŞ</cbc:Name>
      </cac:PartyName>
      <cac:PostalAddress>
        <cbc:StreetName>MAHMUTBEY MAH. 2455 SK. NO:69</cbc:StreetName>
        <cbc:CitySubdivisionName>BAĞCILAR</cbc:CitySubdivisionName>
        <cbc:CityName>ISTANBUL</cbc:CityName>
        <cac:Country>
          <cbc:Name>TÜRKİYE</cbc:Name>
        </cac:Country>
      </cac:PostalAddress>
      <cac:PartyTaxScheme>
        <cac:TaxScheme>
          <cbc:Name>KOCASİNAN</cbc:Name>
        </cac:TaxScheme>
      </cac:PartyTaxScheme>
      <cac:Contact>
        <cbc:Telephone>5332585297</cbc:Telephone>
        <cbc:ElectronicMail>s.cetin@sark-ithalat.com</cbc:ElectronicMail>
      </cac:Contact>
    </cac:Party>
  </cac:AccountingSupplierParty>
  <cac:AccountingCustomerParty>
    <cac:Party>
      <cac:PartyIdentification>
        <cbc:ID schemeID="VKN">1460415308</cbc:ID>
      </cac:PartyIdentification>
      <cac:PartyName>
        <cbc:Name>Gümrük ve Ticaret Bakanlığı Gümrükler Genel Müdürlüğü- Bilgi İşlem Dairesi Başkanlığı</cbc:Name>
      </cac:PartyName>
      <cac:PostalAddress>
        <cbc:StreetName> </cbc:StreetName>
        <cbc:CitySubdivisionName> </cbc:CitySubdivisionName>
        <cbc:CityName>ANKARA</cbc:CityName>
        <cbc:PostalZone/>
        <cac:Country>
          <cbc:Name>TÜRKİYE</cbc:Name>
        </cac:Country>
      </cac:PostalAddress>
      <cac:PartyTaxScheme>
        <cac:TaxScheme>
          <cbc:Name>ULUS</cbc:Name>
        </cac:TaxScheme>
      </cac:PartyTaxScheme>
      <cac:Contact>
        <cbc:Telephone/>
        <cbc:ElectronicMail/>
      </cac:Contact>
    </cac:Party>
  </cac:AccountingCustomerParty>
  <cac:BuyerCustomerParty>
    <cac:Party>
      <cac:PartyIdentification>
        <cbc:ID schemeID="PARTYTYPE">EXPORT</cbc:ID>
      </cac:PartyIdentification>
      <cac:PartyName>
        <cbc:Name>DEZEGA SP GÜVENLİK ÜRÜNLERİ SAN. VE TİC. A.Ş.</cbc:Name>
      </cac:PartyName>
      <cac:PostalAddress>
        <cbc:StreetName>ZAFER SB MH. NİLÜFER SK. NO:30</cbc:StreetName>
        <cbc:CitySubdivisionName>GAZİEMİR</cbc:CitySubdivisionName>
        <cbc:CityName>İZMİR</cbc:CityName>
        <cac:Country>
          <cbc:Name>TÜRKİYE</cbc:Name>
        </cac:Country>
      </cac:PostalAddress>
      <cac:PartyTaxScheme>
        <cac:TaxScheme>
          <cbc:Name>GAZİEMİR</cbc:Name>
        </cac:TaxScheme>
      </cac:PartyTaxScheme>
      <cac:PartyLegalEntity>
        <cbc:RegistrationName>DEZEGA SP GÜVENLİK ÜRÜNLERİ SAN. VE TİC. A.Ş.</cbc:RegistrationName>
        <cbc:CompanyID>2950507816</cbc:CompanyID>
      </cac:PartyLegalEntity>
      <cac:Contact>
        <cbc:Telephone>5327481338</cbc:Telephone>
        <cbc:ElectronicMail/>
      </cac:Contact>
    </cac:Party>
  </cac:BuyerCustomerParty>
  <cac:PricingExchangeRate>
    <cbc:SourceCurrencyCode>USD</cbc:SourceCurrencyCode>
    <cbc:TargetCurrencyCode>TRY</cbc:TargetCurrencyCode>
    <cbc:CalculationRate>14.6873</cbc:CalculationRate>
  </cac:PricingExchangeRate>
  <cac:TaxTotal>
    <cbc:TaxAmount currencyID="USD">0</cbc:TaxAmount>
    <cac:TaxSubtotal>
      <cbc:TaxableAmount currencyID="USD">40</cbc:TaxableAmount>
      <cbc:TaxAmount currencyID="USD">0</cbc:TaxAmount>
      <cbc:Percent>0</cbc:Percent>
      <cac:TaxCategory>
        <cbc:TaxExemptionReasonCode>205</cbc:TaxExemptionReasonCode>
        <cbc:TaxExemptionReason>205</cbc:TaxExemptionReason>
        <cac:TaxScheme>
          <cbc:Name>KDV</cbc:Name>
          <cbc:TaxTypeCode>0015</cbc:TaxTypeCode>
        </cac:TaxScheme>
      </cac:TaxCategory>
    </cac:TaxSubtotal>
  </cac:TaxTotal>
  <cac:LegalMonetaryTotal>
    <cbc:LineExtensionAmount currencyID="USD">40</cbc:LineExtensionAmount>
    <cbc:TaxExclusiveAmount currencyID="USD">40</cbc:TaxExclusiveAmount>
    <cbc:TaxInclusiveAmount currencyID="USD">40</cbc:TaxInclusiveAmount>
    <cbc:AllowanceTotalAmount currencyID="USD">0</cbc:AllowanceTotalAmount>
    <cbc:PayableAmount currencyID="USD">40</cbc:PayableAmount>
  </cac:LegalMonetaryTotal>
  <cac:InvoiceLine>
    <cbc:ID>1</cbc:ID>
    <cbc:InvoicedQuantity unitCode="C62">100</cbc:InvoicedQuantity>
    <cbc:LineExtensionAmount currencyID="USD">40</cbc:LineExtensionAmount>
    <cac:Delivery>
      <cac:DeliveryAddress>
        <cbc:StreetName>ZAFER SB MH. NİLÜFER SK. NO:30</cbc:StreetName>
        <cbc:CitySubdivisionName>GAZİEMİR</cbc:CitySubdivisionName>
        <cbc:CityName>İZMİR</cbc:CityName>
        <cac:Country>
          <cbc:Name>TÜRKİYE,TÜRKİYE</cbc:Name>
        </cac:Country>
      </cac:DeliveryAddress>
      <cac:DeliveryTerms>
        <cbc:ID schemeID="INCOTERMS">CIP</cbc:ID>
      </cac:DeliveryTerms>
      <cac:Shipment>
        <cbc:ID> </cbc:ID>
        <cac:GoodsItem>
          <cbc:RequiredCustomsID>123456789123</cbc:RequiredCustomsID>
        </cac:GoodsItem>
        <cac:ShipmentStage>
          <cbc:TransportModeCode>2</cbc:TransportModeCode>
        </cac:ShipmentStage>
      </cac:Shipment>
    </cac:Delivery>
    <cac:TaxTotal>
      <cbc:TaxAmount currencyID="USD">0</cbc:TaxAmount>
      <cac:TaxSubtotal>
        <cbc:TaxableAmount currencyID="USD">40</cbc:TaxableAmount>
        <cbc:TaxAmount currencyID="USD">0</cbc:TaxAmount>
        <cbc:Percent>0</cbc:Percent>
        <cac:TaxCategory>
          <cbc:TaxExemptionReasonCode>205</cbc:TaxExemptionReasonCode>
          <cbc:TaxExemptionReason>205</cbc:TaxExemptionReason>
          <cac:TaxScheme>
            <cbc:Name>KDV</cbc:Name>
            <cbc:TaxTypeCode>0015</cbc:TaxTypeCode>
          </cac:TaxScheme>
        </cac:TaxCategory>
      </cac:TaxSubtotal>
    </cac:TaxTotal>
    <cac:Item>
      <cbc:Name>CK2.00.000 P?-U1 64 SYF KİTAPÇIK</cbc:Name>
    </cac:Item>
    <cac:Price>
      <cbc:PriceAmount currencyID="USD">0.4</cbc:PriceAmount>
    </cac:Price>
  </cac:InvoiceLine>
</Invoice>