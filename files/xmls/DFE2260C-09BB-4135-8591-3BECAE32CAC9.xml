<?xml version="1.0" encoding="utf-8"?>
<Invoice xmlns="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2" xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2" xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2" xmlns:ccts="urn:un:unece:uncefact:documentation:2" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:ext="urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2" xmlns:qdt="urn:oasis:names:specification:ubl:schema:xsd:QualifiedDatatypes-2" xmlns:ubltr="urn:oasis:names:specification:ubl:schema:xsd:TurkishCustomizationExtensionComponents" xmlns:udt="urn:un:unece:uncefact:data:specification:UnqualifiedDataTypesSchemaModule:2" xmlns:xades="http://uri.etsi.org/01903/v1.3.2#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <cbc:UBLVersionID>2.1</cbc:UBLVersionID>
  <cbc:CustomizationID>TR1.2</cbc:CustomizationID>
  <cbc:ProfileID>EARSIVFATURA</cbc:ProfileID>
  <cbc:ID>SRA2022000000064</cbc:ID>
  <cbc:CopyIndicator>false</cbc:CopyIndicator>
  <cbc:UUID>DFE2260C-09BB-4135-8591-3BECAE32CAC9</cbc:UUID>
  <cbc:IssueDate>2022-03-04</cbc:IssueDate>
  <cbc:IssueTime>20:21:31.533Z</cbc:IssueTime>
  <cbc:InvoiceTypeCode>SATIS</cbc:InvoiceTypeCode>
  <cbc:DocumentCurrencyCode>TRY</cbc:DocumentCurrencyCode>
  <cbc:LineCountNumeric>2</cbc:LineCountNumeric>
  <cac:AdditionalDocumentReference>
    <cbc:ID>DFE2260C-09BB-4135-8591-3BECAE32CAC9</cbc:ID>
    <cbc:IssueDate>2022-03-04</cbc:IssueDate>
    <cac:Attachment>
      <cbc:EmbeddedDocumentBinaryObject characterSetCode="UTF-8" encodingCode="Base64" mimeCode="application/xml" filename="DFE2260C-09BB-4135-8591-3BECAE32CAC9.xslt"></cbc:EmbeddedDocumentBinaryObject>
    </cac:Attachment>
  </cac:AdditionalDocumentReference>
  <cac:AccountingSupplierParty>
    <cac:Party>
      <cac:PartyIdentification>
        <cbc:ID schemeID="VKN">1234567801</cbc:ID>
      </cac:PartyIdentification>
      <cac:PartyName>
        <cbc:Name>MİMSOFT ARGE ARŞİVLEME TEKNOLOJİLERİ AŞ</cbc:Name>
      </cac:PartyName>
      <cac:PostalAddress>
        <cbc:StreetName>MAHMUTBEY MAH. 2455 SK. NO:69</cbc:StreetName>
        <cbc:CitySubdivisionName>BAĞCILAR</cbc:CitySubdivisionName>
        <cbc:CityName>ISTANBUL</cbc:CityName>
        <cac:Country>
          <cbc:Name>TÜRKİYE</cbc:Name>
        </cac:Country>
      </cac:PostalAddress>
      <cac:PartyTaxScheme>
        <cac:TaxScheme>
          <cbc:Name>KOCASİNAN</cbc:Name>
        </cac:TaxScheme>
      </cac:PartyTaxScheme>
      <cac:Contact>
        <cbc:Telephone>5332585297</cbc:Telephone>
        <cbc:ElectronicMail>s.cetin@sark-ithalat.com</cbc:ElectronicMail>
      </cac:Contact>
    </cac:Party>
  </cac:AccountingSupplierParty>
  <cac:AccountingCustomerParty>
    <cac:Party>
      <cac:PartyIdentification>
        <cbc:ID schemeID="VKN">6190882454</cbc:ID>
      </cac:PartyIdentification>
      <cac:PartyName>
        <cbc:Name>METE EL SANATLARI PAZ.İTH.İHR.SAN.VE TİC AŞ.</cbc:Name>
      </cac:PartyName>
      <cac:PostalAddress>
        <cbc:StreetName>KADIKÖY MH.TURAN GÜNEŞ CD. SANTRAL APT.SİT. NO:134/D</cbc:StreetName>
        <cbc:CitySubdivisionName>KOCAELİ</cbc:CitySubdivisionName>
        <cbc:CityName>İZMİT</cbc:CityName>
        <cbc:PostalZone/>
        <cac:Country>
          <cbc:Name>TÜRKİYE</cbc:Name>
        </cac:Country>
      </cac:PostalAddress>
      <cac:PartyTaxScheme>
        <cac:TaxScheme>
          <cbc:Name>ALEMDAR</cbc:Name>
        </cac:TaxScheme>
      </cac:PartyTaxScheme>
      <cac:Contact>
        <cbc:Telephone>0262324 8617</cbc:Telephone>
        <cbc:ElectronicMail/>
      </cac:Contact>
    </cac:Party>
  </cac:AccountingCustomerParty>
  <cac:TaxTotal>
    <cbc:TaxAmount currencyID="TRY">986.4</cbc:TaxAmount>
    <cac:TaxSubtotal>
      <cbc:TaxableAmount currencyID="TRY">5480</cbc:TaxableAmount>
      <cbc:TaxAmount currencyID="TRY">986.4</cbc:TaxAmount>
      <cbc:Percent>18</cbc:Percent>
      <cac:TaxCategory>
        <cac:TaxScheme>
          <cbc:Name>KDV</cbc:Name>
          <cbc:TaxTypeCode>0015</cbc:TaxTypeCode>
        </cac:TaxScheme>
      </cac:TaxCategory>
    </cac:TaxSubtotal>
  </cac:TaxTotal>
  <cac:LegalMonetaryTotal>
    <cbc:LineExtensionAmount currencyID="TRY">5480</cbc:LineExtensionAmount>
    <cbc:TaxExclusiveAmount currencyID="TRY">5480</cbc:TaxExclusiveAmount>
    <cbc:TaxInclusiveAmount currencyID="TRY">6466.4</cbc:TaxInclusiveAmount>
    <cbc:AllowanceTotalAmount currencyID="TRY">0</cbc:AllowanceTotalAmount>
    <cbc:PayableAmount currencyID="TRY">6466.4</cbc:PayableAmount>
  </cac:LegalMonetaryTotal>
  <cac:InvoiceLine>
    <cbc:ID>1</cbc:ID>
    <cbc:InvoicedQuantity unitCode="DPC">60</cbc:InvoicedQuantity>
    <cbc:LineExtensionAmount currencyID="TRY">1800</cbc:LineExtensionAmount>
    <cac:TaxTotal>
      <cbc:TaxAmount currencyID="TRY">324</cbc:TaxAmount>
      <cac:TaxSubtotal>
        <cbc:TaxableAmount currencyID="TRY">1800</cbc:TaxableAmount>
        <cbc:TaxAmount currencyID="TRY">324</cbc:TaxAmount>
        <cbc:Percent>18</cbc:Percent>
        <cac:TaxCategory>
          <cac:TaxScheme>
            <cbc:Name>KDV</cbc:Name>
            <cbc:TaxTypeCode>0015</cbc:TaxTypeCode>
          </cac:TaxScheme>
        </cac:TaxCategory>
      </cac:TaxSubtotal>
    </cac:TaxTotal>
    <cac:Item>
      <cbc:Name>TULIP ELASTİK SAPLI TIĞ</cbc:Name>
    </cac:Item>
    <cac:Price>
      <cbc:PriceAmount currencyID="TRY">30</cbc:PriceAmount>
    </cac:Price>
  </cac:InvoiceLine>
  <cac:InvoiceLine>
    <cbc:ID>2</cbc:ID>
    <cbc:InvoicedQuantity unitCode="C62">460</cbc:InvoicedQuantity>
    <cbc:LineExtensionAmount currencyID="TRY">3680</cbc:LineExtensionAmount>
    <cac:TaxTotal>
      <cbc:TaxAmount currencyID="TRY">662.4</cbc:TaxAmount>
      <cac:TaxSubtotal>
        <cbc:TaxableAmount currencyID="TRY">3680</cbc:TaxableAmount>
        <cbc:TaxAmount currencyID="TRY">662.4</cbc:TaxAmount>
        <cbc:Percent>18</cbc:Percent>
        <cac:TaxCategory>
          <cac:TaxScheme>
            <cbc:Name>KDV</cbc:Name>
            <cbc:TaxTypeCode>0015</cbc:TaxTypeCode>
          </cac:TaxScheme>
        </cac:TaxCategory>
      </cac:TaxSubtotal>
    </cac:TaxTotal>
    <cac:Item>
      <cbc:Name>TULIP ETİMO YÜN TIĞ</cbc:Name>
    </cac:Item>
    <cac:Price>
      <cbc:PriceAmount currencyID="TRY">8</cbc:PriceAmount>
    </cac:Price>
  </cac:InvoiceLine>
</Invoice>